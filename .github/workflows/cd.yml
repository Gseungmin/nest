name: CD

on:
  push:
    branches: ['main']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Clear .env file
        run: echo "" > .env

      - name: Set .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "SYNCHRONIZED=${{ secrets.SYNCHRONIZED }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "MODE=${{ secrets.MODE }}" >> .env

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.0

      - name: Install Dependencies
        run: npm ci

      - name: Build App
        run: npm run build

      - name: Docker Build and Push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/nest .
          docker push ${{ secrets.DOCKER_REPO }}/nest

      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            echo "${{ secrets.PORT }}" > /home/ubuntu/.env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> /home/ubuntu/.env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> /home/ubuntu/.env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> /home/ubuntu/.env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> /home/ubuntu/.env
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> /home/ubuntu/.env
            echo "SYNCHRONIZED=${{ secrets.SYNCHRONIZED }}" >> /home/ubuntu/.env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> /home/ubuntu/.env
            echo "MODE=${{ secrets.MODE }}" >> /home/ubuntu/.env

            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/nest
            docker-compose up -d
            docker image prune -f
